version: "3.3"
services:

  ml_blocks_root:
    volumes:
      - ./samples/ml-blocks:/app
      - ./samples/stores/default:/app/data
    build:
      context: ./samples/ml-blocks
      dockerfile: Dockerfile
    environment:
      - LOADER=pandas
      - BLOCK_NAME=Root
    ports:
      - "9080:80"
    command: [ "/app/start.sh" ]
    networks:
      - ml-blocks-net

  layer1:
    depends_on:
      - ml_blocks_root
    volumes:
      - ./samples/ml-blocks:/app
      - ./samples/stores/layer1:/app/data
    build:
      context: ./samples/ml-blocks
      dockerfile: Dockerfile
    environment:
      - LOADER=pandas
      - BLOCK_NAME=layer1
      - REGISTRY=ml_blocks_root
    command: [ "/app/start.sh" ]
    # command: [ "/app/start_dev.sh" ]
    networks:
      - ml-blocks-net

  layer2:
    depends_on:
      - layer1
    volumes:
      - ./samples/ml-blocks:/app
      - ./samples/stores/layer2:/app/data
    build:
      context: ./samples/ml-blocks
      dockerfile: Dockerfile
    environment:
      - LOADER=pandas
      - BLOCK_NAME=layer2
      - REGISTRY=ml_blocks_root
    ports:
      - "9082:80"
    command: [ "/app/start.sh" ]
    # command: [ "/app/start_dev.sh" ]
    networks:
      - ml-blocks-net

  ui:
    depends_on:
      - ml_blocks_root
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - REGISTRY=ml_blocks_root
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - 3000:3000
    links:
      - "ml_blocks_root:ml_blocks_root"
    networks:
      - ml-blocks-net

networks:
  ml-blocks-net:
